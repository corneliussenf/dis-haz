theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
theme(legend.position = "none")
p_eff
p_eff <- ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
theme(legend.position = "none")
ecoregion_effects$model <- "binomial"
write_csv(ecoregion_effects, "../results/binomial/ecoregion_effects_binomial.csv")
ggsave("ecoregion_effects_binomial.pdf", p_eff, path = "../results/binomial", width = 7, height = 2.5)
ggsave("ecoregion_effects_binomial.pdf", p_eff, path = "../../../../../results/supplement/", width = 7, height = 2.5)
raw_eco <- read_sf("../../../../../materials/raw_data/shapefiles_ecological_units/WLamPoly.shp")
p_map <- raw_eco %>%
mutate(main = Wuchsge1) %>%
mutate(main = substring(main, 1,1)) %>%
st_set_precision(100) %>%
group_by(main) %>%
summarize() %>%
ggplot(., aes( fill = factor(main))) +
geom_sf() +
theme_bw() +
scale_fill_brewer(palette = "Set1", direction = -1) +
guides(fill = guide_legend(title = "Ecological region"))
p_map
ggsave("../../../../../results/supplement/ecoregion_map_binomial.pdf", p_map, width = 7.5, height = 5)
ggsave("../../../../../results/supplement/ecoregion_map_binomial.png", p_map, width = 7.5, height = 5)
ggsave("../results/binomial/ecoregion_map_binomial.pdf", p_map, width = 7.5, height = 5)
pred_posterior_full <- final_models %>%
map(~ posterior_predict(., draws = 100))
ppc_mean <- pred_posterior_full %>%
map2(.y = list(data$MFL, data$FST),
~ bayesplot::ppc_stat(y = ifelse(.y > 0, 1, 0),
yrep = .x,
stat = "mean")) %>%
map2(.y = processes_names, ~ . +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
legend.position = "none") +
scale_fill_manual(values = "grey") +
scale_color_manual(values = "black") +
labs(title = .y, x = "Mean probability", y = "Count")) %>%
patchwork::wrap_plots(.)
ggsave("ppc_binomial.pdf", ppc_mean, path = "../results/binomial/", width = 5.5, height = 2.5)
ggsave("ppc_binomial.png", ppc_mean, path = "../../../../../results/figures/", width = 5.5, height = 2.5)
ggsave("ppc_binomial.pdf", ppc_mean, path = "../../../../../results/figures/", width = 5.5, height = 2.5)
ppc_mean
{
Sys.setenv(USE_CXX14 = 1)
library(raster) # version 2.6-7
library(sp) # version 1.3-1
library(rgdal) # version 1.3-4
library(igraph) # version 1.2.2
library(tidyverse) # version 1.2.1
library(rstanarm) # version 2.17.4
library(projpred )# version 0.8.0
library(multiscales) # version 0.1.0 # devtools::install_github("clauswilke/multiscales")
library(patchwork) # version 0.0.1
library(rstan) # version 2.17.4
library(sf) # version 0.6-3
library(gridExtra) # version 2.3
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
rm(list=ls())
}
data <- read.csv("../data/data_for_model.csv")
processes <- c("MFL", "FST")
processes_names <- c("Debris flow", "Flood")
vars_ws <- data.frame(varname = c("h_mean", "Melton", "Elevation", "Circularit", "Elongation",
"artifical", "forest", "area", "patchdensity",
"eco_region",
"extent",
"type",
"extent:type"),
name = c("Elevation", "Melton ratio", "Elevation ratio", "Circularity", "Elongation",
"Infrastructure", "Forest cover", "Area", "Patch density",
"Ecological region",
"Extent",
"Type",
"Extent x Type"),
stringsAsFactors = FALSE)
models <- vector("list", length = length(processes))
load(file =  "../results/count/models_count.RData")
final_models <- models %>% map(., ~ .[[1]][[5]])
pred_posterior_full <- final_models %>%
map(~ posterior_predict(., draws = 100))
ppc_mean <- pred_posterior_full %>%
map2(.y = list(data$FST), # TODO: Add data$DCOMBINE
~ bayesplot::ppc_bars(y = .y,
yrep = .x)) %>%
map2(.y = processes_names, ~ . +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
legend.position = "none") +
labs(title = .y) +
scale_size(limits = c(0, 0.5)) +
scale_y_log10() +
labs(x = "Number of events") +
xlim(-1, 15)) %>%
patchwork::wrap_plots(.)
ggsave("ppc_count.pdf", ppc_mean, path = "../results/count/", width = 5.5, height = 2.5)
ggsave("ppc_count.png", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 2.5)
ggsave("ppc_count.pdf", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 2.5)
#xlim(-1, 15)) %>%
ppc_mean <- pred_posterior_full %>%
ppc_mean <- pred_posterior_full %>%
NULL
ppc_mean <- pred_posterior_full %>%
ppc_mean <- pred_posterior_full %>%
map2(.y = list(data$FST), # TODO: Add data$DCOMBINE
~ bayesplot::ppc_bars(y = .y,
yrep = .x)) %>%
map2(.y = processes_names, ~ . +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
legend.position = "none") +
labs(title = .y) +
scale_size(limits = c(0, 0.5)) +
scale_y_log10() +
labs(x = "Number of events") +
xlim(-1, 15)) %>%
patchwork::wrap_plots(.)
ppc_mean <- pred_posterior_full %>%
map2(.y = list(data$FST), # TODO: Add data$DCOMBINE
~ bayesplot::ppc_bars(y = .y,
yrep = .x)) %>%
map2(.y = processes_names, ~ . +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
legend.position = "none") +
labs(title = .y) +
scale_size(limits = c(0, 0.5)) +
scale_y_log10() +
labs(x = "Number of events") +
xlim(-1, 15)) %>%
patchwork::wrap_plots(.)
ppc_mean
pred_posterior_full
pred_posterior_full <- final_models %>%
map(~ posterior_predict(., draws = 100))
pred_posterior_full
ppc_mean <- pred_posterior_full %>%
map2(.y = list(data$FST), # TODO: Add data$DCOMBINE
~ bayesplot::ppc_bars(y = .y,
yrep = .x)
)
ppc_mean
ppc_mean <- pred_posterior_full %>%
map2(.y = list(data$FST), # TODO: Add data$DCOMBINE
~ bayesplot::ppc_bars(y = .y,
yrep = .x)) %>%
map2(.y = processes_names, ~ . +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
legend.position = "none") +
labs(title = .y) +
scale_size(limits = c(0, 0.5)) +
scale_y_log10() +
labs(x = "Number of events") +
xlim(-1, 15)) %>%
patchwork::wrap_plots(.)
ggsave("ppc_count.pdf", ppc_mean, path = "../results/count/", width = 5.5, height = 2.5)
ggsave("ppc_count.png", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 2.5)
ggsave("ppc_count.pdf", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 2.5)
ggsave("ppc_count.png", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 5.5)
ggsave("ppc_count.png", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 3.5)
ggsave("ppc_count.pdf", ppc_mean, path = "../results/count/", width = 5.5, height = 3.5)
ggsave("ppc_count.png", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 3.5)
ggsave("ppc_count.pdf", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 3.5)
rm(list=ls())
library(raster) # version 2.6-7
{
Sys.setenv(USE_CXX14 = 1)
library(raster) # version 2.6-7
library(sp) # version 1.3-1
library(rgdal) # version 1.3-4
library(igraph) # version 1.2.2
library(tidyverse) # version 1.2.1
library(rstanarm) # version 2.17.4
library(projpred )# version 0.8.0
library(multiscales) # version 0.1.0 # devtools::install_github("clauswilke/multiscales")
library(patchwork) # version 0.0.1
library(rstan) # version 2.17.4
library(sf) # version 0.6-3
library(gridExtra) # version 2.3
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
rm(list=ls())
}
data <- read.csv("../data/data_for_model.csv")
processes <- c("MFL", "FST")
processes_names <- c("Debris flow", "Flood")
vars_ws <- data.frame(varname = c("h_mean", "Melton", "Elevation", "Circularit", "Elongation",
"artifical", "forest", "area", "patchdensity",
"eco_region",
"extent",
"type",
"extent:type"),
name = c("Elevation", "Melton ratio", "Elevation ratio", "Circularity", "Elongation",
"Infrastructure", "Forest cover", "Area", "Patch density",
"Ecological region",
"Extent",
"Type",
"Extent x Type"),
stringsAsFactors = FALSE)
models <- vector("list", length = length(processes))
load(file =  "../results/binomial/models_binomial.RData")
final_models <- models %>% map(., ~ .[[1]][[5]])
pred_posterior_full <- final_models %>%
map(~ posterior_predict(., draws = 100))
ppc_mean <- pred_posterior_full %>%
map2(.y = list(data$MFL, data$FST),
~ bayesplot::ppc_stat(y = ifelse(.y > 0, 1, 0),
yrep = .x,
stat = "mean")) %>%
map2(.y = processes_names, ~ . +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank(),
legend.position = "none") +
scale_fill_manual(values = "grey") +
scale_color_manual(values = "black") +
labs(title = .y, x = "Mean probability", y = "Count")) %>%
patchwork::wrap_plots(.)
ggsave("ppc_binomial.pdf", ppc_mean, path = "../results/binomial/", width = 5.5, height = 3.5)
ggsave("ppc_binomial.png", ppc_mean, path = "../../../../../results/figures/", width = 5.5, height = 3.5)
ggsave("ppc_binomial.pdf", ppc_mean, path = "../../../../../results/figures/", width = 5.5, height = 3.5)
ggsave("ppc_binomial.png", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 3.5)
ggsave("ppc_binomial.pdf", ppc_mean, path = "../../../../../results/supplement/", width = 5.5, height = 3.5)
ecoregion_effects <- final_models %>%
map(~ as.data.frame(.) %>%
dplyr::select(matches("Intercept"), eco_region2:eco_region9) %>% # Select everything that is an intercept
mutate(draw = 1:4000) %>%
gather(key = varname, value = value, -draw) %>%
mutate(varname = ifelse(varname == "(Intercept)", "intercept", varname))) %>%
set_names(processes_names) %>%
bind_rows(.id = "process") %>%
spread(key = varname, value = value) %>%
gather(key = eco_region, value = value, -process, -draw, -intercept) %>%
mutate(value = value + intercept)
p_eff <- ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
theme(legend.position = "none")
ecoregion_effects$model <- "binomial"
write_csv(ecoregion_effects, "../results/binomial/ecoregion_effects_binomial.csv")
ggsave("ecoregion_effects_binomial.pdf", p_eff, path = "../../../../../results/supplement/", width = 7, height = 2.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7, height = 2.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7, height = 3.5)
ggsave("ecoregion_effects_binomial.pdf", p_eff, path = "../../../../../results/supplement/", width = 5.5, height = 3.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 5.5, height = 3.5)
ggsave("../../../../../results/supplement/ecoregion_map_binomial.png", p_map, width = 7.5, height = 3.5)
p_map <- raw_eco %>%
mutate(main = Wuchsge1) %>%
mutate(main = substring(main, 1,1)) %>%
st_set_precision(100) %>%
group_by(main) %>%
summarize() %>%
ggplot(., aes( fill = factor(main))) +
geom_sf() +
theme_bw() +
scale_fill_brewer(palette = "Set1", direction = -1) +
guides(fill = guide_legend(title = "Ecological region"))
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7, height = 3.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7.5, height = 3.5)
raw_eco <- read_sf("../../../../../materials/raw_data/shapefiles_ecological_units/WLamPoly.shp")
p_map <- raw_eco %>%
mutate(main = Wuchsge1) %>%
mutate(main = substring(main, 1,1)) %>%
st_set_precision(100) %>%
group_by(main) %>%
summarize() %>%
ggplot(., aes( fill = factor(main))) +
geom_sf() +
theme_bw() +
scale_fill_brewer(palette = "Set1", direction = -1) +
guides(fill = guide_legend(title = "Ecological region"))
ggsave("../../../../../results/supplement/ecoregion_map_binomial.pdf", p_map, width = 7.5, height = 5)
ggsave("../../../../../results/supplement/ecoregion_map_binomial.png", p_map, width = 7.5, height = 5)
ggsave("../results/binomial/ecoregion_map_binomial.pdf", p_map, width = 7.5, height = 5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 5.5, height = 2.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 5.5, height = 2.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7.5, height = 2.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7, height = 2.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7, height = 2.5)
ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
theme(legend.position = "none")
p_eff <- ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
theme(legend.position = "none") +
theme_few()
library(ggthemes)
ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
theme(legend.position = "none") +
theme_few()
ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme_few() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
theme(legend.position = "none")
ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
xlim(0,0.30) +
theme(legend.position = "none")
p_eff <- ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
ylim(0,0.30) +
theme(legend.position = "none")
ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
ylim(0,0.30) +
theme(legend.position = "none")
p_eff <- ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
ylim(0,0.25) +
theme(legend.position = "none")
ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
ylim(0,0.25) +
theme(legend.position = "none")
p_eff <- ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecological region") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
ylim(0,0.28) +
theme(legend.position = "none")
p_eff
ecoregion_effects$model <- "binomial"
write_csv(ecoregion_effects, "../results/binomial/ecoregion_effects_binomial.csv")
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7, height = 2.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 7, height = 3.5)
ggsave("ecoregion_effects_binomial.png", p_eff, path = "../../../../../results/supplement/", width = 6, height = 2.5)
ecoregion_effects <- final_models %>%
map(~ as.data.frame(.) %>%
dplyr::select(matches("Intercept"), eco_region2:eco_region9) %>% # Select everything that is an intercept
mutate(draw = 1:4000) %>%
gather(key = varname, value = value, -draw) %>%
mutate(varname = ifelse(varname == "(Intercept)", "intercept", varname))) %>%
set_names(processes_names) %>%
bind_rows(.id = "process") %>%
spread(key = varname, value = value) %>%
gather(key = eco_region, value = value, -process, -draw, -intercept) %>%
mutate(value = value + intercept)
p_eff <- ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecoregion") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
ylim(0,0.28) +
theme(legend.position = "none")
p_map <- raw_eco %>%
mutate(main = Wuchsge1) %>%
mutate(main = substring(main, 1,1)) %>%
st_set_precision(100) %>%
group_by(main) %>%
summarize() %>%
ggplot(., aes( fill = factor(main))) +
geom_sf() +
theme_bw() +
scale_fill_brewer(palette = "Set1", direction = -1) +
guides(fill = guide_legend(title = "Ecoregion"))
ggsave("../../../../../results/supplement/ecoregion_map_binomial.pdf", p_map, width = 7.5, height = 5)
ggsave("../../../../../results/supplement/ecoregion_map_binomial.png", p_map, width = 7.5, height = 5)
ggsave("../results/binomial/ecoregion_map_binomial.pdf", p_map, width = 7.5, height = 5)
p_eff <- ggplot(ecoregion_effects, aes(x = "", y = exp(value))) +
geom_violin(aes(fill = fct_rev(eco_region))) +
theme_bw() +
theme(panel.grid = element_blank(),
strip.background = element_blank()) +
coord_flip() +
theme(strip.background = element_blank()) +
geom_hline(data = ecoregion_effects %>% group_by(process) %>% summarize(m = mean(exp(intercept))),
aes(yintercept = m), linetype = "dashed", col = scales::muted("red")) +
labs(y = "Effect size", x = "", fill = "Ecoregion") +
scale_fill_brewer(palette = "Set1", labels = c("2","3","4","5","6","7","8","9"), breaks = c("eco_region2", "eco_region3", "eco_region4", "eco_region5", "eco_region6", "eco_region7", "eco_region8", "eco_region9")) +
facet_wrap(~process) +
theme(legend.position = "none")
?ggsave
p_eff
